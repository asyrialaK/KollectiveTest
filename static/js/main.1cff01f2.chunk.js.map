{"version":3,"sources":["Store/Store.js","Store/StoreContext.js","components/PokeDetails/PokeDetails.js","components/CaughtPoke/CaughtPoke.js","components/Home/Home.js","components/CatchPoke/CatchPoke.js","components/PokeForm/PokeForm.js","App.js","serviceWorker.js","index.js"],"names":["createPokemonStore","pokemon","active","selected","name","type","ability","caughtPokemon","GetPokemon","offset","Math","floor","random","fetch","method","then","response","json","data","results","Selected","url","console","log","types","abilities","ChangeName","this","forEach","item","caughtPoke","splice","indexOf","push","ChangeCaughtPokeName","PokemonContext","React","createContext","PokeProvider","children","pokemonStore","useLocalStore","Provider","value","usePokemonStore","useContext","useStyles","makeStyles","root","width","margin","padding","details","display","justifyContent","header","textAlign","form","PokeDetails","props","PokemonStore","styles","useState","setPokemon","Card","className","map","key","TextField","id","label","variant","onChange","evt","preventDefault","target","Button","onClick","history","marginLeft","marginRight","title","CaughtPoke","setActive","useObserver","length","Home","location","data-testid","main","CatchPoke","useEffect","PokeForm","App","exact","from","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1cff01f2.chunk.js","sourcesContent":["\nexport function createPokemonStore () {\n\n  return {\n    // This is the stored state\n    pokemon: null,\n    active: false,\n    selected: {\n      name: '',\n      selected: false,\n      type: null,\n      ability: null\n    },\n    caughtPokemon: [],\n\n    // Function that makes a fetch call and returns a random list of 10 pokemon\n    GetPokemon () {\n      const offset = Math.floor(Math.random() * 100)\n      fetch(\n        `https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=10`,\n        {\n          method: 'get'\n        }\n      )\n        .then(response => response.json())\n        .then(data => {\n          this.pokemon = data.results\n        })\n    },\n\n    // Function that takes in the pokemons url and name to set the pokemons types and abilites in the selected state\n    Selected (url, name) {\n      fetch(\n        `${url}`,\n        {\n          method: 'get'\n        }\n      )\n        .then(response => response.json())\n        .then(data => {\n          console.log(data,'data')\n          this.selected = {\n            name: name,\n            selected: true,\n            type: data.types,\n            ability: data.abilities\n          }\n        })\n    },\n\n    // Function that checks to see if the pokemon is selected and then changes the name if desired and moves it to the caught pokemon arr\n    ChangeName (name) {\n      this.pokemon.forEach(item => {\n        if (item.name === name.selected.name) {\n          item.name = name.name\n          const caughtPoke = this.pokemon.splice(this.pokemon.indexOf(item), 1)\n          console.log(caughtPoke[0], 'Caught poke')\n          this.caughtPokemon.push(caughtPoke[0])\n          return this.pokemon\n        }\n      })\n    },\n\n    // Function that allows User to change the pokemon name if desired on the caught pokemon list \n    ChangeCaughtPokeName (name) {\n      this.caughtPokemon.forEach(item => {\n        if (item.name === name.selected.name) {\n          item.name = name.name\n        }\n      })\n    }\n  }\n}\n","import React from 'react'\nimport { createPokemonStore } from './Store'\nimport { useLocalStore } from 'mobx-react'\n\nconst PokemonContext = React.createContext(null)\nexport const PokeProvider = ({ children }) => {\n  const pokemonStore = useLocalStore(createPokemonStore)\n  return (\n    <PokemonContext.Provider value={pokemonStore}>\n      {children}\n    </PokemonContext.Provider>\n  )\n}\n\nexport const usePokemonStore = () => React.useContext(PokemonContext)\n","import React, { useState } from 'react'\nimport { TextField, Button, Card, makeStyles } from '@material-ui/core'\nimport { usePokemonStore } from '../../Store/StoreContext'\n\nfunction PokeDetails (props) {\n  // initilize the store and styles\n  const PokemonStore = usePokemonStore()\n  const styles = useStyles()\n\n  // initilize state for the pokemon to keep track of the selected name\n  const [pokemon, setPokemon] = useState({\n    selected: PokemonStore.selected,\n    name: PokemonStore.selected.name\n  })\n\n  // helper function to update pokemon name on change\n  const updatePokemon = (evt) => {\n    evt.preventDefault()\n    setPokemon({\n      ...pokemon,\n      [evt.target.name]: evt.target.value\n    })\n  }\n  return (\n    <div>\n      <Card className={styles.root}>\n        <h1 className={styles.header}>{pokemon.selected.name}</h1>\n        <hr />\n        <header className={styles.details}>\n          <div>\n            <h3>Pokemon Types:</h3>\n            {pokemon.selected.type.map(item => (\n              <p key={item.type.name}>{item.type.name}</p>\n            ))}\n          </div>\n          <div>\n            <h3>Pokemon Abilities:</h3>\n            {pokemon.selected.ability.map(item => (\n              <p key={item.ability.name}>{item.ability.name}</p>\n            ))}\n          </div>\n        </header>\n        <form className={styles.form}>\n          <TextField\n            id='outlined-basic'\n            type='text'\n            label='New Pokemon Name'\n            name='name'\n            variant='outlined'\n            value={pokemon.name}\n            onChange={updatePokemon}\n          />\n          <Button\n            variant='outlined'\n            onClick={() => {\n              PokemonStore.ChangeCaughtPokeName(pokemon)\n              props.active(false)\n              props.history.push('/')\n            }}\n          >\n        Change Name\n          </Button>\n          <Button\n            variant='outlined'\n            onClick={() => {\n              props.active(false)\n              props.history.push('/')\n            }}\n          >\n        Back\n          </Button>\n        </form>\n      </Card>\n    </div>\n  )\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '90%',\n    margin: '0 auto',\n    padding: 10\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  header: {\n    textAlign: 'center'\n  },\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  }\n})\n\nexport default PokeDetails\n","import React, { useState } from 'react'\nimport { useObserver } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core'\nimport { usePokemonStore } from '../../Store/StoreContext'\nimport PokeDetails from '../PokeDetails/PokeDetails'\n\nfunction CaughtPoke (props) {\n  // set state for active or not in order to run turnary for show hide purpouses\n  const [active, setActive] = useState(false)\n\n  // initilize the store and styles\n  const PokemonStore = usePokemonStore()\n  const styles = useStyles()\n  return useObserver(() => (\n    <>\n      <main className={styles.root}>\n        <div>\n          <h4 className={styles.title}>Your Caught Pokemon:</h4>\n          {PokemonStore.caughtPokemon.length !== 0\n            ? PokemonStore.caughtPokemon.map(pokemon => (\n              <div key={pokemon.name}>\n                {console.log(pokemon, 'check check')}\n                <h3\n                  onClick={() => {\n                    PokemonStore.Selected(pokemon.url, pokemon.name)\n                    setActive(true)\n                  }}\n                  key={pokemon.name}\n                >\n                  {pokemon.name}\n                </h3>\n              </div>\n            ))\n            : <p>No Pokemon To Display</p>}\n        </div>\n        <div>\n          {active\n            ? <PokeDetails history={props.history} active={setActive} />\n            : null}\n        </div>\n      </main>\n    </>\n  ))\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    marginLeft: '15px',\n    marginRight: '15px',\n    padding: 15,\n    justifyContent: 'space-around'\n  },\n  title: {\n    margin: 15\n  }\n})\n\nexport default CaughtPoke\n","import React from 'react'\nimport { Button, makeStyles } from '@material-ui/core'\nimport CaughtPoke from '../CaughtPoke/CaughtPoke'\nimport { useObserver } from 'mobx-react'\n\nfunction Home (props) {\n  const { history, location} = props\n\n  // initilize the styles\n  const styles = useStyles()\n  return useObserver(() => (\n    <div>\n      <header className={styles.header}>\n        <h1><i>POKEMON</i></h1>\n        <h1>Got To Catch Them All!</h1>\n        <Button\n          data-testid='button'\n          variant='outlined'\n          onClick={() => history.push('/CatchPoke')}\n        >Catch Pokemon\n        </Button>\n      </header>\n      <CaughtPoke history={history} />\n    </div>\n  ))\n}\n\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center'\n  }\n})\n\nexport default Home\n","import { useObserver } from 'mobx-react'\nimport React, { useEffect } from 'react'\nimport { Button, makeStyles } from '@material-ui/core'\nimport { usePokemonStore } from '../../Store/StoreContext'\n\nfunction CatchPoke (props) {\n  // initilize the store and styles\n  const PokemonStore = usePokemonStore()\n  const styles = useStyles()\n  const { history } = props\n\n  // on mount run get pokemon to get a random list of new pokemon\n  useEffect(() => {\n    PokemonStore.GetPokemon()\n  }, [])\n\n  return useObserver(() => (\n    <div>\n      <header className={styles.header}>\n        <h1>Catch Pokemon</h1>\n        <Button\n          variant='outlined'\n          onClick={() => history.push('/')}\n        >\n          Home\n        </Button>\n      </header>\n      <main className={styles.main}>\n        {PokemonStore.pokemon\n          ? PokemonStore.pokemon.map(pokemon => (\n            <>\n              <h3\n                onClick={() => PokemonStore.Selected(pokemon.url, pokemon.name)}\n                key={pokemon.name}\n              >\n                {pokemon.name}\n              </h3>\n              {PokemonStore.selected.name === pokemon.name\n                ? <Button\n                  variant='outlined'\n                  onClick={() => history.push('/PokeForm')}\n                >\n              Catch Pokemon\n                </Button>\n                : null}\n            </>\n          ))\n          : <p>Loading</p>}\n      </main>\n    </div>\n  ))\n}\n\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center'\n  },\n  main: {\n    marginLeft: 30\n  }\n})\n\nexport default CatchPoke\n","import React, { useState } from 'react'\nimport { TextField, Button, Card, makeStyles } from '@material-ui/core'\nimport { usePokemonStore } from '../../Store/StoreContext'\n\nfunction PokeForm (props) {\n  const { history } = props\n\n  // initilize the store and styles\n  const PokemonStore = usePokemonStore()\n  const styles = useStyles()\n\n  // initilize state for the pokemon to keep track of the selected name\n  const [pokemon, setPokemon] = useState({\n    selected: PokemonStore.selected,\n    name: PokemonStore.selected.name\n  })\n\n  // helper function to update pokemon name on change\n  const updatePokemon = (evt) => {\n    evt.preventDefault()\n    setPokemon({\n      ...pokemon,\n      [evt.target.name]: evt.target.value\n    })\n  }\n  return (\n    <div>\n      <Card className={styles.root}>\n        <h1 className={styles.header}>{pokemon.selected.name}</h1>\n        <hr />\n        <header className={styles.details}>\n          <div>\n            <h3>Pokemon Types:</h3>\n            {pokemon.selected.type.map(item => (\n              <p key={item.type.name}>{item.type.name}</p>\n            ))}\n          </div>\n          <div>\n            <h3>Pokemon Abilities:</h3>\n            {pokemon.selected.ability.map(item => (\n              <p key={item.ability.name}>{item.ability.name}</p>\n            ))}\n          </div>\n        </header>\n        <form className={styles.form}>\n          <TextField\n            id='outlined-basic'\n            type='text'\n            label='New Pokemon Name'\n            name='name'\n            variant='outlined'\n            value={pokemon.name}\n            onChange={updatePokemon}\n          />\n          <Button\n            variant='outlined'\n            onClick={() => {\n              PokemonStore.ChangeName(pokemon)\n              history.push('/CatchPoke')\n            }}\n          >\n          Change Name\n          </Button>\n          <Button\n            variant='outlined'\n            onClick={() => {\n              history.push('/CatchPoke')\n            }}\n          >\n          Back\n          </Button>\n        </form>\n      </Card>\n    </div>\n  )\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '60%',\n    margin: '0 auto',\n    padding: 10\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  header: {\n    textAlign: 'center'\n  },\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  }\n})\n\nexport default PokeForm\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './components/Home/Home'\nimport { Button } from '@material-ui/core'\nimport CatchPoke from './components/CatchPoke/CatchPoke'\nimport PokeForm from './components/PokeForm/PokeForm'\nimport PokeDetails from './components/PokeDetails/PokeDetails'\nimport CaughtPoke from './components/CaughtPoke/CaughtPoke'\n\nfunction App () {\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact from='/' render={props => <Home {...props} />} />\n        <Route exact from='/CatchPoke' render={props => <CatchPoke {...props} />} />\n        <Route exact from='/PokeForm' render={props => <PokeForm {...props} />} />\n        <Route exact from='/PokeDetails' render={props => <PokeDetails {...props} />} />\n        <Route exact from='/CaughtPoke' render={props => <CaughtPoke {...props} />} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { PokeProvider } from './Store/StoreContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <PokeProvider>\n        <App />\n      </PokeProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}